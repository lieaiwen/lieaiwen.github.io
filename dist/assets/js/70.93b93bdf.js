(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{295:function(t,r,n){"use strict";n.r(r);var _=n(6),v=Object(_.a)({},(function(){var t=this,r=t.$createElement,n=t._self._c||r;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"什么是设计模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是设计模式"}},[t._v("#")]),t._v(" 什么是设计模式")]),t._v(" "),n("p",[n("strong",[t._v("设计模式的定义是：")])]),t._v(" "),n("blockquote",[n("p",[t._v("在面向对象软件设计过程中针对特定问题的简洁而优雅的解决方案")])]),t._v(" "),n("p",[t._v("通俗一点说，设计模式是在某种场合下对某个问题的一种解决方案。如果再通俗一点说，设\n计模式就是给面向对象软件开发中的一些好的设计取个名字。")]),t._v(" "),n("p",[t._v("设计模式不是高深技术，奇技淫巧，只是一种设计思想，针对不同的业务场景，最本质的目的是解耦，为了可扩展性和健壮性。")]),t._v(" "),n("p",[n("strong",[t._v("学习模式的作用")])]),t._v(" "),n("blockquote",[n("p",[t._v("在软件设计中，模式是一些经过了大量实际项目验证的优秀解决方案。熟悉这些模式\n的程序员，对某些模式的理解也许形成了条件反射。当合适的场景出现时，他们可以很快地找到\n某种模式作为解决方案。")])]),t._v(" "),n("p",[n("strong",[t._v("设计原则:")]),t._v(" "),n("br"),t._v(" "),n("strong",[t._v("1.0 单一职责原则（SRP）")]),n("br"),t._v("\n一个对象或方法只做一件事情。如果一个方法承担了过多的职责，那么在需求的变迁过程中，需要改写这个方法的可能性就越大。"),n("br"),t._v("\n应该把对象或方法划分成较小的粒度"),n("br"),t._v(" "),n("strong",[t._v("2.0 最少知识原则（LKP）")]),n("br"),t._v("\n一个软件实体应当 尽可能少地与其他实体发生相互作用 "),n("br"),t._v("\n应当尽量减少对象之间的交互。如果两个对象之间不必彼此直接通信，那么这两个对象就不要发生直接的 相互联系，可以转交给第三方进行处理"),n("br"),t._v(" "),n("strong",[t._v("3.0 开放-封闭原则（OCP）")]),n("br"),t._v("\n软件实体（类、模块、函数）等应该是可以 扩展的，但是不可修改"),n("br"),t._v("\n当需要改变一个程序的功能或者给这个程序增加新功能的时候，可以使用增加代码的方式，尽量避免改动程序的源代码，防止影响原系统的稳定"),n("br")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://segmentfault.com/a/1190000017787537",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考链接"),n("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=v.exports}}]);
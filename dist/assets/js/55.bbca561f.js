(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{73:function(t,n,r){"use strict";r.r(n);var e=r(0),a=Object(e.a)({},(function(){var t=this,n=t.$createElement,r=t._self._c||n;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"选择排序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#选择排序"}},[t._v("#")]),t._v(" 选择排序")]),t._v(" "),r("p",[t._v("选择排序是一种简单直观的排序算法，无论什么数据进去都是 O(n²) 的时间复杂度。所以用到它的时候，数据规模越小越好。唯一的好处可能就是不占用额外的内存空间了吧。 "),r("br"),t._v("\n步骤 "),r("br"),t._v("\n首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置。 "),r("br"),t._v("\n再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。 "),r("br"),t._v("\n重复第二步，直到所有元素均排序完毕。"),r("br"),t._v("\n自己总结 就是 "),r("br"),t._v("\n遍历一遍 找到最小的放在第一个位置，再遍历一遍(剩下的的不包括第一个位置)，知道最小的放在第二个位置，以此类推"),r("br")]),t._v(" "),r("p",[t._v("如下图：\n"),r("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2019/03/selectionSort.gif",alt:"avatar"}})]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("function selectSort(arr){\n\t\tvar len = arr.length; \n\t\tvar minIndex , temp;\n\t\tfor(var i=0;i<len-1;i++){\n\t\t\tminIndex =i;\n\t\t\tfor(var j=i+1;j<len;j++){\n\t\t\t\tif(arr[j] < arr[minIndex]){\n\t\t\t\t\tminIndex = j;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttemp =arr[i];\n\t\t\tarr[i] =arr[minIndex];\n\t\t\tarr[minIndex] = temp;\n\t\t}\n\t\treturn arr;\n\t}\n")])])]),r("p",[r("a",{attrs:{href:"http://www.zliel.top/vpdemo/sort-demo/sort2.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("demo"),r("OutboundLink")],1),t._v(" "),r("br")])])}),[],!1,null,null,null);n.default=a.exports}}]);
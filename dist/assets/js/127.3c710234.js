(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{344:function(e,n,t){"use strict";t.r(n);var s=t(6),a=Object(s.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"webpack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[e._v("#")]),e._v(" webpack")]),e._v(" "),t("h2",{attrs:{id:"什么是前端缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是前端缓存"}},[e._v("#")]),e._v(" 什么是前端缓存")]),e._v(" "),t("p",[e._v("https://blog.csdn.net/u010730126/article/details/102688274")]),e._v(" "),t("p",[e._v("有待总结的：\nphp 基础知识，\nmysql 语句 https://www.cnblogs.com/tutuai/p/8371620.html")]),e._v(" "),t("div",{staticClass:"language-输出语句 extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("3.1 echo 只能输出数字，字符串\n\n对于布尔型，true 输出1 false 输出 空\necho '111','2222';\n可以输出多个参数\n\n3.2 var_dump() 输出值和类型，\n如果是数组的话，输出键值，和数据类型\n\n3.3 print_r() 用来输出数组，输出的内容包括键和值，不包括数据类型\n\n3.4 print \n不能输出多个参数，只能输出一个参数，此外\n$n = print '123';\necho $n; //1\nprint 输出成功返回1，失败返回0 ，echo 没有返回值\n")])])]),t("p",[e._v("tp5 路由的三种模式")]),e._v(" "),t("ol",[t("li",[e._v("普通模式 完全用路径")]),e._v(" "),t("li",[e._v("混合模式 可以用路径也可以用路由")]),e._v(" "),t("li",[e._v("强制模式 必须用路由")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("tp5\n数据库相关再model 层\n页面相关再controller 层\nvaliidate 层 验证层\n获取数据 BannerModel::get(1)->getData()\n$region_id = CategoryModel::where('category_title','=',$region)\n           ->find(); \n模糊查询\n$goodsModel = new GoodsModel();\n        $res = $goodsModel->where('shop_name','like','%'.$goods_name.'%')\n            ->where('category','like','%'.$category_name.'%')->select();\n$res->count(); // 总数\n->page($page,$pageSize); 分页\n// 降序\n    $res = $res->order('price')->select()->hidden(['content'])->toArray();\n}else{ // 升序\n    $res = $res->order('price','desc')->select()->hidden(['content'])->toArray();\n\n更新$res = $mes->save();\n$res = $user->whereOr('id','like','%'.$search.'%')\n                    ->whereOr('phone','like','%'.$search.'%')\n                    ->page($page,$pageSize)\n                    ->select();\n更新信息 $mes = GoodsModel::get($goodsId);\n             $mes->shop_name     = $name;\n             $mes->content    = $detailMsg;\n             $mes->category    = $region;\n             $mes->category_id    = $region_id;\n             $mes->price    = $price;\n             $mes->stock    = $stock;\n             $mes->img    = $img;\n             $res = $mes->save();\n\n保存数据 \n$GoodsModel = new GoodsModel();\n         $res =  $GoodsModel->save([\n            'shop_name' => $name,\n             'content' => $detailMsg,\n             'category' => $region,\n             'category_id' => $region_id,\n             'price' => $price,\n             'stock' => $stock,\n             'img' => $img,\n         ]);\n\n保存 多条数据\n$res = 0 || $user->saveAll($data);\n\n\n删除数据 $res = GoodsModel::where('id','=',$goodsId)\n                 ->delete();\n\n获取参数 $goodsId = input('get.id'); \n\n")])])]),t("h2",{attrs:{id:"小程序授权流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小程序授权流程"}},[e._v("#")]),e._v(" 小程序授权流程")]),e._v(" "),t("p",[e._v("支付流程")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" wx.requestPayment({\n       timeStamp: options.payment.timeStamp,\n       nonceStr: options.payment.nonceStr,\n       package: 'prepay_id=' + options.payment.prepay_id,\n       signType: 'MD5',\n       paySign: options.payment.paySign,\n       success(res) {\n         options.success(res);\n       },\n")])])]),t("p",[e._v("登录流程")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" // 执行微信登录\n     wx.login({\n       success(res) {\n         // 发送用户信息\n         App._post_form('user/login', {\n           code: res.code,\n           user_info: e.detail.rawData,\n           encrypted_data: e.detail.encryptedData,\n           iv: e.detail.iv,\n           signature: e.detail.signature,\n           referee_id: wx.getStorageSync('referee_id')\n         }, result => {}\n")])])]),t("table",[t("thead",[t("tr",[t("th",[e._v("插件名称")]),e._v(" "),t("th",[e._v("作用")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("html-webpack-plugin")]),e._v(" "),t("td",[e._v("生成 html 文件,引入公共的 js 和 css 资源")])]),e._v(" "),t("tr",[t("td",[e._v("webpack-bundle-analyzer")]),e._v(" "),t("td",[e._v("对打包后的文件进行分析，生成资源分析图")])]),e._v(" "),t("tr",[t("td",[e._v("terser-webpack-plugin")]),e._v(" "),t("td",[e._v("代码压缩，移除 console.log 打印等")])]),e._v(" "),t("tr",[t("td",[e._v("HappyPack Plugin")]),e._v(" "),t("td",[e._v("开启多线程打包，提升打包速度")])]),e._v(" "),t("tr",[t("td",[e._v("Dllplugin")]),e._v(" "),t("td",[e._v("动态链接库，将项目中依赖的三方模块抽离出来，单独打包")])]),e._v(" "),t("tr",[t("td",[e._v("DllReferencePlugin")]),e._v(" "),t("td",[e._v("配合 Dllplugin，通过 manifest.json 映射到相关的依赖上去")])]),e._v(" "),t("tr",[t("td",[e._v("clean-webpack-plugin")]),e._v(" "),t("td",[e._v("清理上一次项目生成的文件")])]),e._v(" "),t("tr",[t("td",[e._v("vue-skeleton-webpack-plugin")]),e._v(" "),t("td",[e._v("vue 项目实现骨架屏")])])])])])}),[],!1,null,null,null);n.default=a.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{101:function(e,n,t){"use strict";t.r(n);var r=t(0),a=Object(r.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"number-对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#number-对象"}},[e._v("#")]),e._v(" Number 对象")]),e._v(" "),t("p",[e._v("Number 对象是原始数值的包装对象。 "),t("br"),e._v("\nNumber 创建方式 new Number()。 "),t("br"),e._v("\nvar num = new Number(value); "),t("br"),e._v("\n注意： 如果一个参数值不能转换为一个数字将返回 NaN (非数字值)。 "),t("br"),e._v("\n主要Number 对象属性"),t("br"),e._v("\nprototype\t允许您可以向对象添加属性和方法。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('Number.prototype.myMet=function(){\n\tthis.myProp=this.valueOf()/2;\n}\nfunction myFunction(){\n\tvar d = new Number(55);\n\td.myMet();\n\tvar x=document.getElementById("demo");\n\tx.innerHTML=d.myProp;\n}\n')])])]),t("p",[e._v("1.0 Number.isFinite() 方法  ie12才支持"),t("br")]),e._v(" "),t("p",[e._v("isFinite() 函数用于检测指定参数是否为无穷大。 "),t("br")]),e._v(" "),t("p",[e._v("提示： 如果 number 是 NaN（非数字），或者是正、负无穷大的数，则返回 false。 "),t("br")]),e._v(" "),t("p",[e._v("Number.isFinite() 与全局的 isFinite() 函数不同，全局的 isFinite() 会先把检测值转换为 Number ，然后在检测。 "),t("br")]),e._v(" "),t("p",[e._v("Number.isFinite() 不会将检测值转换为 Number对象，如果检测值不是 Number 类型，则返回 false。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Number.isFinite(123) //true\nNumber.isFinite(-1.23) //true\nNumber.isFinite(5-2) //true\nNumber.isFinite(0) //true\nNumber.isFinite('123') //false\nNumber.isFinite('Hello') //false\nNumber.isFinite('2005/12/12') //false\nNumber.isFinite(Infinity) //false\nNumber.isFinite(-Infinity) //false\nNumber.isFinite(0 / 0) //false\n")])])]),t("p",[e._v("2.0 toFixed(x)\t把数字转换为字符串，结果的小数点后有指定位数的数字。\ntoFixed() 方法可把 Number 四舍五入为指定小数位数的数字。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("把数字转换为字符串，结果的小数点后有指定位数的数字：\nvar num = 5.56789;\nvar n=num.toFixed(2); // 5.57 \n\n将一个数字，不留任何小数：\nvar num = 5.56789;\nvar n=num.toFixed(); // 6\n\n转换一个比指定数小的小数点后的位数的数字：\nvar num = 5.56789;\nvar n=num.toFixed(7); // 5.5678900\n\n")])])]),t("p",[e._v("3.0  toPrecision(x)\t把数字格式化为指定的长度。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var num = new Number(13.3714);\nvar a = num.toPrecision(); // 13.3714\nvar b = num.toPrecision(2); // 13\nvar c = num.toPrecision(3); // 13.4\nvar d = num.toPrecision(10); // 13.37140000\n")])])]),t("p",[e._v("4.0  toString()\t把数字转换为字符串，使用指定的基数。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("数字的字符串表示。例如，当 radix 为 2 时，NumberObject 会被转换为二进制值表示的字符串。\n\nvar num = 15;\nvar a = num.toString(); // 15\nvar b = num.toString(2); // 1111\nvar c = num.toString(8); // 17\nvar d = num.toString(16); // f\n")])])]),t("p",[e._v("5.0  valueOf()\t返回一个 Number 对象的基本数字值。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("返回一个 Number 对象的基本数字值：\n\nvar num = 15;\nvar n = num.valueOf(); // 15\n")])])]),t("p",[e._v("6.0  （es6新增的）Number.isInteger(): 用来判断给定的参数是否为整数。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Number.isInteger() 在参数是整数时返回 true。\nNumber.isInteger(10);        // 返回 true\nNumber.isInteger(10.5);      // 返回 false\n")])])]),t("p",[e._v('7.0  （es6新增的）Number.isSafeInteger(): 判断传入的参数值是否是一个"安全整数"。')]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('Number.isSafeInteger()判断传入的参数值是否是一个"安全整数"。\n\n安全整数范围为 -(253 - 1)到 253 - 1 之间的整数，包含 -(253 - 1)和 253 - 1。\nNumber.isSafeInteger(10);    // 返回 true\nNumber.isSafeInteger(12345678901234567890);  // 返回 false\n')])])])])}),[],!1,null,null,null);n.default=a.exports}}]);
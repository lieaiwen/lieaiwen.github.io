(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{190:function(t,s,a){t.exports=a.p+"assets/img/1.cbd6fea6.png"},191:function(t,s,a){t.exports=a.p+"assets/img/2.48ba97da.png"},257:function(t,s,a){"use strict";a.r(s);var n=a(6),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"_8-0-执行上下文和执行栈"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-0-执行上下文和执行栈"}},[t._v("#")]),t._v(" 8.0 执行上下文和执行栈")]),t._v(" "),n("p",[n("strong",[t._v("什么是执行上下文？")])]),t._v(" "),n("p",[t._v("Javascript 代码都是在执行上下文中运行的\n"),n("br")]),t._v(" "),n("p",[t._v("执行上下文： 指当前执行环境中的变量、函数声明、作用域链、this等信息\n"),n("br")]),t._v(" "),n("p",[t._v("其实也可以理解为，执行上下文就是作用域")]),t._v(" "),n("p",[n("strong",[t._v("执行上下文生命周期")]),t._v(" "),n("br")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("创建阶段 "),n("br"),t._v("\n生成变量对象、建立作用域链、确定this的指向")])]),t._v(" "),n("li",[n("p",[t._v("执行阶段 "),n("br"),t._v("\n变量赋值、函数的引用、执行其他代码\n"),n("img",{attrs:{src:a(190),alt:"avatar"}}),n("br")])])]),t._v(" "),n("p",[n("strong",[t._v("变量对象")])]),t._v(" "),n("p",[t._v("变量对象是与执行上下文相关的数据作用域，存储了上下文中定义的变量和函数声明\n"),n("br")]),t._v(" "),n("p",[t._v("变量对象是一个抽象的概念，在全局执行上下文中，变量对象就是全局对象。 在顶层js代码中，this指向全局对象，全局变量会作为该对象的属性来被查询。在浏览器中，window就是全局对象")]),t._v(" "),n("p",[n("strong",[t._v("执行栈")])]),t._v(" "),n("p",[t._v("是一种"),n("strong",[t._v("先进后出")]),t._v("的数据结构，用来存储代码运行的所有执行上下文"),n("br")]),t._v(" "),n("ol",[n("li",[t._v("当 JS 引擎第一次遇到js脚本时，会创建一个全局的执行上下文并且压入当前执行栈"),n("br")]),t._v(" "),n("li",[t._v("每当JS 引擎遇到一个函数调用，它会为该函数创建一个新的执行上下文并压入栈的顶部"),n("br")]),t._v(" "),n("li",[t._v("当该函数执行结束时，执行上下文从栈中弹出，控制流程到达当前栈中的下一个上下文"),n("br")]),t._v(" "),n("li",[t._v("一旦所有代码执行完毕，JS 引擎从当前栈中移除全局执行上下文")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 全局上下文环境")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. fn上下文环境")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("c")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. bar上下文环境")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(191),alt:"avatar"}}),n("br")]),t._v(" "),n("p",[t._v("执行上下文分"),n("strong",[t._v("全局上下文、函数上下文和块级上下文。")])]),t._v(" "),n("br"),t._v("\n1. 全局执行上下文（浏览器环境下，为全局的 window 对象）"),n("br"),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[t._v("函数执行上下文，每当一个函数被调用时, 都会为该函数创建一个新的上下文"),n("br")])]),t._v(" "),n("p",[n("strong",[t._v("执行上下文的特点：")]),t._v(" "),n("br")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("单线程，只在主线程上运行；"),n("br")])]),t._v(" "),n("li",[n("p",[t._v("同步执行，从上向下按顺序执行；"),n("br")])]),t._v(" "),n("li",[n("p",[t._v("全局上下文只有一个，也就是window对象；"),n("br")])]),t._v(" "),n("li",[n("p",[t._v("函数每调用一次就会产生一个新的执行上下文环境。"),n("br")])]),t._v(" "),n("li",[n("p",[t._v("函数或块的局部上下文不仅可以访问自己作用域内的变量，而且也可以访问任何包含上下文乃\n至全局上下文中的变量。"),n("br")])]),t._v(" "),n("li",[n("p",[t._v("全局上下文只能访问全局上下文中的变量和函数，不能直接访问局部上下文中的任何数据。"),n("br")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);
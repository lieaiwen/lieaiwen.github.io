(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{98:function(r,e,t){"use strict";t.r(e);var a=t(0),n=Object(a.a)({},(function(){var r=this,e=r.$createElement,t=r._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h2",{attrs:{id:"js-error-错误-对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js-error-错误-对象"}},[r._v("#")]),r._v(" js Error(错误)对象")]),r._v(" "),t("p",[r._v("Error 对象在错误发生时提供了错误的提示信息。")]),r._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[r._v('try {\n    adddlert("Welcome");\n}\ncatch(err) {\n     err.name + "<br>" + err.message;\n} \n// ReferenceError(引用错误)\nadddlert is not defined\n')])])]),t("p",[r._v("Error 对象属性 两个 "),t("br"),r._v("\nerr.name  错误名 "),t("br"),r._v("\nerr.message 错误信息 "),t("br")]),r._v(" "),t("h2",{attrs:{id:"throw-语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#throw-语句"}},[r._v("#")]),r._v(" Throw 语句")]),r._v(" "),t("p",[r._v("throw 语句允许我们创建自定义错误。 "),t("br")]),r._v(" "),t("p",[r._v("正确的技术术语是：创建或抛出异常（exception）。 "),t("br")]),r._v(" "),t("p",[r._v("如果把 throw 与 try 和 catch 一起使用，那么您能够控制程序流，并生成自定义的错误消息")]),r._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[r._v('var message, x;\n    try { \n        if(x == "")  throw "值为空";\n        if(isNaN(x)) throw "不是数字";\n        x = Number(x);\n        if(x < 5)    throw "太小";\n        if(x > 10)   throw "太大";\n    }\n    catch(err) {\n        message.innerHTML = "错误: " + err;\n    }\n')])])]),t("h2",{attrs:{id:"finally-语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#finally-语句"}},[r._v("#")]),r._v(" finally 语句")]),r._v(" "),t("p",[r._v("finally 语句不论之前的 try 和 catch 中是否产生异常都会执行该代码块。")]),r._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[r._v('var message, x;\n  message = document.getElementById("p01");\n  message.innerHTML = "";\n  x = document.getElementById("demo").value;\n  try { \n    if(x == "") throw "值是空的";\n    if(isNaN(x)) throw "值不是一个数字";\n    x = Number(x);\n    if(x > 10) throw "太大";\n    if(x < 5) throw "太小";\n  }\n  catch(err) {\n    message.innerHTML = "错误: " + err + ".";\n  }\n  finally {\n    document.getElementById("demo").value = "";\n  }\n')])])])])}),[],!1,null,null,null);e.default=n.exports}}]);
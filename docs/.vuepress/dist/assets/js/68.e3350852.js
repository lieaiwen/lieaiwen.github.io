(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{253:function(n,t,a){"use strict";a.r(t);var e=a(6),l=Object(e.a)({},(function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h2",{attrs:{id:"call和apply的模拟实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#call和apply的模拟实现"}},[n._v("#")]),n._v(" call和apply的模拟实现")]),n._v(" "),a("p",[a("strong",[n._v("用法：")])]),n._v(" "),a("blockquote",[a("p",[n._v("A.call(B,x,y)  B,x,y 为参数")])]),n._v(" "),a("ol",[a("li",[n._v("改变函数A的this指向，使之指向B; （B为null，undefined的时候A里面的this指向window）")]),n._v(" "),a("li",[n._v("把A函数放到B中运行，x和y是A函数的参数")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v(" var girl = { name:'du',age:18 }\n function boy(){ console.log(this.age) }\n\nboy.call(girl) // 18\n")])])]),a("p",[n._v("注意：")]),n._v(" "),a("ol",[a("li",[n._v("call改变了this的指向，指向了girl")]),n._v(" "),a("li",[n._v("boy 函数执行了")])]),n._v(" "),a("p",[a("strong",[n._v("模拟实现第一步")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v(" var girl = {\n     age: 18,\n     boy: function() {\n         console.log(this.age)\n     }\n };\n \n girl.boy(); // 18\n")])])]),a("p",[n._v("这样this 指向了girl，但是我们又增加了girl的属性，都这样写的话我们还有call干嘛？\n"),a("br"),n._v("\n那我们就把它再删除了。"),a("br"),n._v("\n继续我们的步骤：")]),n._v(" "),a("ol",[a("li",[n._v("将函数设为对象的属性")]),n._v(" "),a("li",[n._v("执行该函数")]),n._v(" "),a("li",[n._v("删除该函数")])]),n._v(" "),a("blockquote",[a("p",[n._v("1.0 girl.fn = boy"),a("br"),n._v("\n2.0 girl.fn()"),a("br"),n._v("\n3.0 delete girl.fn"),a("br")])]),n._v(" "),a("p",[n._v("所以我们的第一版likeCall："),a("br")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("Function.prototype.ss = function(){ console.log(this) }\n\nfunction a(){}\na.ss() // function a(){}\n\n\nFunction.prototype.likeCall = function(context){\n// 首先要获取调用call的函数，用this可以获取\n    context.fn = this;\n    context.fn()\n    delete context.fn;\n} \n\nvar girl = { name:'du',age:18 }\n function boy(){ console.log(this.age) }\n\nboy.likeCall(girl) // 18\n")])])]),a("p",[a("strong",[n._v("模拟实现第二步")])]),n._v(" "),a("p",[n._v("call 里面是可以传参数的并且是一个到多个,此时我们就可以用到函数里面的arguments对象获取对象的参数了")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v(" function aa(a,b,c){ console.log(arguments) }\naa(1,2,3) \narguments = {\n      0: 1,\n      1: 2,\n      2: 3,\n      length: 3\n }\n因为arguments 是类似数组对象我们可以用for 循环\nvar args = []\nfor(var i = 1, len = arguments.length; i < len; i++) {\n    args.push('arguments[' + i + ']');\n}\n 执行后 args为 [arguments[1], arguments[2], arguments[3]]\n")])])]),a("p",[n._v("接下里我们把上面的数组放到要执行的函数里面")]),n._v(" "),a("ol",[a("li",[n._v("context.fn(...args) //es6")]),n._v(" "),a("li",[n._v("eval('context.fn(' + args +')') //es3")])]),n._v(" "),a("p",[n._v("所以我们的第二版代码是：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v(" Function.prototype.likeCall = function(context){\n // 首先要获取调用call的函数，用this可以获取\n    context.fn = this;\n    var args = []\n    for(var i = 1, len = arguments.length; i < len; i++) {\n        args.push('arguments[' + i + ']');\n    }\n     eval('context.fn(' + args +')')\n     delete context.fn;\n } \n \n var girl = { name:'du',age:18 }\n  function boy(a, b){ \n    console.log(this.age + '--' + a +'--' + b)\n  }\n \n boy.likeCall(girl,10,9) // 18--10--9\n")])])]),a("p",[n._v("不要急还有最后一步:"),a("br")]),n._v(" "),a("ol",[a("li",[n._v("第一个参数为null或者undefined的时候,即A的this 指向window"),a("br")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("  var age = 18 \n   function boy(){ \n     console.log(this.age )\n   }\n  \n  boy.call(null) // 18\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[n._v("函数是有返回值的")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("  var age = 18 \n   function boy(){ \n     return this.age +2\n   }\n  \n  boy.call(null) // 20\n")])])]),a("p",[n._v("综合上面两种情况直接上代码：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("  Function.prototype.likeCall = function(context){\n      var context = context || window;\n  // 首先要获取调用call的函数，用this可以获取\n     context.fn = this;\n     var args = []\n     for(var i = 1, len = arguments.length; i < len; i++) {\n         args.push('arguments[' + i + ']');\n     }\n     var result =  eval('context.fn(' + args +')')\n      delete context.fn;\n     return result;\n  } \n测试：\n   var age = 18 \n   var woman = {age:30}\n   function boy(){ \n     return this.age +2\n   }\n  \n  boy.likeCall(null) // 20  返回值没问题 \n  boy.likeCall(woman) // 32 原来的也没问题\n")])])]),a("p",[n._v("完成了。"),a("br"),n._v(" "),a("strong",[n._v("apply的模拟实现")])]),n._v(" "),a("p",[n._v("apply跟call的区别就是 参数的不同而已 一个是多个参数一个是一个数组:\n"),a("br"),n._v("\n看我们第一行的代码就是：")]),n._v(" "),a("blockquote",[a("p",[n._v("A.apply(B,[1,2])")])]),n._v(" "),a("p",[n._v("所以我们只要修改一下就行了:")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v(" Function.prototype.likeApply = function(context, arr){\n       var context = context || window;\n   // 首先要获取调用call的函数，用this可以获取\n      context.fn = this;\n      var result\n      if(!arr){\n            result = context.fn()\n      }else{\n          var args = []\n          for(var i = 1, len = arguments.length; i < len; i++) {\n              args.push('arguments[' + i + ']');\n          }\n          result =  eval('context.fn(' + args +')')\n      }\n       delete context.fn;\n      return result;\n   } \n 测试： 不用测试了 的有点自信吧！\n")])])]),a("p",[n._v("参考链接："),a("a",{attrs:{href:""}},[n._v("冴羽的博客")]),n._v(" https://github.com/mqyqingfeng/Blog/issues/11"),a("br")])])}),[],!1,null,null,null);t.default=l.exports}}]);